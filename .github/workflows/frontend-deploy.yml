name: Deploy Frontend to Vercel

# Trigger workflow on push to main branch only
on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'  # Only trigger when frontend files change

# Environment variables available to all jobs
env:
  NODE_VERSION: '18'  # Use Node.js 18 for better performance and security

jobs:
  # Job to test and deploy frontend to Vercel
  deploy-frontend:
    name: Test and Deploy Frontend
    runs-on: ubuntu-latest  # Use latest Ubuntu runner
    
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for better caching
      
      # Step 2: Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'  # Enable npm caching
          cache-dependency-path: frontend/package-lock.json
      
      # Step 3: Navigate to frontend directory
      - name: Navigate to frontend directory
        run: cd frontend
      
      # Step 4: Install dependencies with caching
      - name: Install dependencies
        run: npm ci  # Use ci for faster, reliable installs
      
      # Step 5: Run frontend tests
      - name: Run frontend tests
        run: npm test -- --watchAll=false --coverage --passWithNoTests
      
      # Step 6: Build frontend for production
      - name: Build frontend
        run: npm run build
        env:
          # Add any build-time environment variables here
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
      
      # Step 7: Deploy to Vercel
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          # Vercel configuration
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend  # Specify frontend directory
          vercel-args: '--prod'  # Deploy to production
      
      # Step 8: Comment deployment status (optional)
      - name: Comment deployment status
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Frontend deployed successfully to Vercel!'
            }) 